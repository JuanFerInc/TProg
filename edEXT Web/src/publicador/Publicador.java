
package publicador;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Publicador", targetNamespace = "http://publicador/")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Publicador {


    /**
     * 
     * @return
     *     returns publicador.SetString
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/listarCursosExistenteRequest", output = "http://publicador/Publicador/listarCursosExistenteResponse")
    public SetString listarCursosExistente();

    /**
     * 
     * @param arg0
     * @return
     *     returns publicador.SetString
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/seleccionarInstitutoRequest", output = "http://publicador/Publicador/seleccionarInstitutoResponse")
    public SetString seleccionarInstituto(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg5
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     * @throws ProgramaRepetidoExcep_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/registrarProgramaRequest", output = "http://publicador/Publicador/registrarProgramaResponse", fault = {
        @FaultAction(className = ProgramaRepetidoExcep_Exception.class, value = "http://publicador/Publicador/registrarPrograma/Fault/ProgramaRepetidoExcep")
    })
    public boolean registrarPrograma(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        XMLGregorianCalendar arg2,
        @WebParam(name = "arg3", partName = "arg3")
        XMLGregorianCalendar arg3,
        @WebParam(name = "arg4", partName = "arg4")
        XMLGregorianCalendar arg4,
        @WebParam(name = "arg5", partName = "arg5")
        String arg5)
        throws ProgramaRepetidoExcep_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns publicador.SetString
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/seleccionarProgramaRequest", output = "http://publicador/Publicador/seleccionarProgramaResponse")
    public SetString seleccionarPrograma(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     */
    @WebMethod
    @Action(input = "http://publicador/Publicador/aceptarAgregarCursoAProgramaRequest", output = "http://publicador/Publicador/aceptarAgregarCursoAProgramaResponse")
    public void aceptarAgregarCursoAPrograma();

    /**
     * 
     * @return
     *     returns publicador.DtInstancia
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/mostrarEdicionVigenteDeCursoRequest", output = "http://publicador/Publicador/mostrarEdicionVigenteDeCursoResponse")
    public DtInstancia mostrarEdicionVigenteDeCurso();

    /**
     * 
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/existeEdicionVigenteDeCursoRequest", output = "http://publicador/Publicador/existeEdicionVigenteDeCursoResponse")
    public boolean existeEdicionVigenteDeCurso();

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     * @throws InstitutoRepetidoExcep_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/registrarInstitutoRequest", output = "http://publicador/Publicador/registrarInstitutoResponse", fault = {
        @FaultAction(className = InstitutoRepetidoExcep_Exception.class, value = "http://publicador/Publicador/registrarInstituto/Fault/InstitutoRepetidoExcep")
    })
    public boolean registrarInstituto(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws InstitutoRepetidoExcep_Exception
    ;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @Action(input = "http://publicador/Publicador/modificarInscripcionDelEstudianteRequest", output = "http://publicador/Publicador/modificarInscripcionDelEstudianteResponse")
    public void modificarInscripcionDelEstudiante(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2);

    /**
     * 
     * @param arg1
     * @param arg0
     * @throws UsuarioRepetidoExcep_Exception
     */
    @WebMethod(operationName = "InscribirUsuarioAProgramaDeFormacion")
    @Action(input = "http://publicador/Publicador/InscribirUsuarioAProgramaDeFormacionRequest", output = "http://publicador/Publicador/InscribirUsuarioAProgramaDeFormacionResponse", fault = {
        @FaultAction(className = UsuarioRepetidoExcep_Exception.class, value = "http://publicador/Publicador/InscribirUsuarioAProgramaDeFormacion/Fault/UsuarioRepetidoExcep")
    })
    public void inscribirUsuarioAProgramaDeFormacion(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1)
        throws UsuarioRepetidoExcep_Exception
    ;

    /**
     * 
     * @return
     *     returns publicador.SetString
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/listarInstitutosRequest", output = "http://publicador/Publicador/listarInstitutosResponse")
    public SetString listarInstitutos();

    /**
     * 
     * @param arg0
     * @return
     *     returns publicador.SetString
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/seleccionarCursoRequest", output = "http://publicador/Publicador/seleccionarCursoResponse")
    public SetString seleccionarCurso(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns publicador.ListString
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/ordenarRequest", output = "http://publicador/Publicador/ordenarResponse")
    public ListString ordenar(
        @WebParam(name = "arg0", partName = "arg0")
        SetString arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns publicador.DtInstancia
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/verDatosEdicionRequest", output = "http://publicador/Publicador/verDatosEdicionResponse")
    public DtInstancia verDatosEdicion(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns int
     * @throws UsuarioNoExisteExcep_Exception
     * @throws EstudianteSinEvaluarExcep_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/verCorreccionRequest", output = "http://publicador/Publicador/verCorreccionResponse", fault = {
        @FaultAction(className = EstudianteSinEvaluarExcep_Exception.class, value = "http://publicador/Publicador/verCorreccion/Fault/EstudianteSinEvaluarExcep"),
        @FaultAction(className = UsuarioNoExisteExcep_Exception.class, value = "http://publicador/Publicador/verCorreccion/Fault/UsuarioNoExisteExcep")
    })
    public int verCorreccion(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        boolean arg2)
        throws EstudianteSinEvaluarExcep_Exception, UsuarioNoExisteExcep_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns publicador.MapStringStringAlgo
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/buscarRequest", output = "http://publicador/Publicador/buscarResponse")
    public MapStringStringAlgo buscar(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @return
     *     returns publicador.SetString
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/listarProgramasRequest", output = "http://publicador/Publicador/listarProgramasResponse")
    public SetString listarProgramas();

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg5
     * @param arg4
     * @param arg1
     * @param arg0
     * @param arg10
     * @param arg7
     * @param arg6
     * @param arg9
     * @param arg8
     * @return
     *     returns boolean
     * @throws CursoRepetidoExcep_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/registrarCursoRequest", output = "http://publicador/Publicador/registrarCursoResponse", fault = {
        @FaultAction(className = CursoRepetidoExcep_Exception.class, value = "http://publicador/Publicador/registrarCurso/Fault/CursoRepetidoExcep")
    })
    public boolean registrarCurso(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        int arg3,
        @WebParam(name = "arg4", partName = "arg4")
        int arg4,
        @WebParam(name = "arg5", partName = "arg5")
        int arg5,
        @WebParam(name = "arg6", partName = "arg6")
        String arg6,
        @WebParam(name = "arg7", partName = "arg7")
        XMLGregorianCalendar arg7,
        @WebParam(name = "arg8", partName = "arg8")
        SetString arg8,
        @WebParam(name = "arg9", partName = "arg9")
        SetString arg9,
        @WebParam(name = "arg10", partName = "arg10")
        String arg10)
        throws CursoRepetidoExcep_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns publicador.DtCurso
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/verDatosCursoRequest", output = "http://publicador/Publicador/verDatosCursoResponse")
    public DtCurso verDatosCurso(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg5
     * @param arg4
     * @param arg1
     * @param arg0
     * @param arg6
     * @return
     *     returns boolean
     * @throws EdicionRepetidaExcep_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/registrarEdicionRequest", output = "http://publicador/Publicador/registrarEdicionResponse", fault = {
        @FaultAction(className = EdicionRepetidaExcep_Exception.class, value = "http://publicador/Publicador/registrarEdicion/Fault/EdicionRepetidaExcep")
    })
    public boolean registrarEdicion(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        XMLGregorianCalendar arg1,
        @WebParam(name = "arg2", partName = "arg2")
        XMLGregorianCalendar arg2,
        @WebParam(name = "arg3", partName = "arg3")
        int arg3,
        @WebParam(name = "arg4", partName = "arg4")
        SetString arg4,
        @WebParam(name = "arg5", partName = "arg5")
        XMLGregorianCalendar arg5,
        @WebParam(name = "arg6", partName = "arg6")
        String arg6)
        throws EdicionRepetidaExcep_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns publicador.DtInstancia
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/verDatosProgramaRequest", output = "http://publicador/Publicador/verDatosProgramaResponse")
    public DtInstancia verDatosPrograma(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     */
    @WebMethod
    @Action(input = "http://publicador/Publicador/pedirInfoRequest", output = "http://publicador/Publicador/pedirInfoResponse")
    public void pedirInfo();

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/esProgramaRequest", output = "http://publicador/Publicador/esProgramaResponse")
    public boolean esPrograma(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @throws CategoriaRepetidaExcep_Exception
     */
    @WebMethod
    @Action(input = "http://publicador/Publicador/altaCategoriaRequest", output = "http://publicador/Publicador/altaCategoriaResponse", fault = {
        @FaultAction(className = CategoriaRepetidaExcep_Exception.class, value = "http://publicador/Publicador/altaCategoria/Fault/CategoriaRepetidaExcep")
    })
    public void altaCategoria(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws CategoriaRepetidaExcep_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @throws EstadoEsFinalExcep_Exception
     * @throws NoPudoInscribirseExcep_Exception
     */
    @WebMethod
    @Action(input = "http://publicador/Publicador/cambiarEstadoRequest", output = "http://publicador/Publicador/cambiarEstadoResponse", fault = {
        @FaultAction(className = EstadoEsFinalExcep_Exception.class, value = "http://publicador/Publicador/cambiarEstado/Fault/EstadoEsFinalExcep"),
        @FaultAction(className = NoPudoInscribirseExcep_Exception.class, value = "http://publicador/Publicador/cambiarEstado/Fault/NoPudoInscribirseExcep")
    })
    public void cambiarEstado(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1)
        throws EstadoEsFinalExcep_Exception, NoPudoInscribirseExcep_Exception
    ;

    /**
     * 
     * @return
     *     returns publicador.SetString
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/listarCategoriasRequest", output = "http://publicador/Publicador/listarCategoriasResponse")
    public SetString listarCategorias();

    /**
     * 
     * @param arg0
     * @return
     *     returns publicador.ListString
     * @throws CursoNoExisteExcep_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/ordenarSegunAnioRequest", output = "http://publicador/Publicador/ordenarSegunAnioResponse", fault = {
        @FaultAction(className = CursoNoExisteExcep_Exception.class, value = "http://publicador/Publicador/ordenarSegunAnio/Fault/CursoNoExisteExcep")
    })
    public ListString ordenarSegunAnio(
        @WebParam(name = "arg0", partName = "arg0")
        SetString arg0)
        throws CursoNoExisteExcep_Exception
    ;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @throws EstudianteSinEvaluarExcep_Exception
     */
    @WebMethod
    @Action(input = "http://publicador/Publicador/corregirExamenRequest", output = "http://publicador/Publicador/corregirExamenResponse", fault = {
        @FaultAction(className = EstudianteSinEvaluarExcep_Exception.class, value = "http://publicador/Publicador/corregirExamen/Fault/EstudianteSinEvaluarExcep")
    })
    public void corregirExamen(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        ListString arg1,
        @WebParam(name = "arg2", partName = "arg2")
        ListInteger arg2)
        throws EstudianteSinEvaluarExcep_Exception
    ;

    /**
     * 
     */
    @WebMethod
    @Action(input = "http://publicador/Publicador/salirCursoRequest", output = "http://publicador/Publicador/salirCursoResponse")
    public void salirCurso();

    /**
     * 
     * @return
     *     returns publicador.SetString
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/mostrarEdicionesRequest", output = "http://publicador/Publicador/mostrarEdicionesResponse")
    public SetString mostrarEdiciones();

    /**
     * 
     * @param arg1
     * @param arg0
     * @throws UsuarioNoExisteExcep_Exception
     */
    @WebMethod
    @Action(input = "http://publicador/Publicador/eliminarSeguimientoRequest", output = "http://publicador/Publicador/eliminarSeguimientoResponse", fault = {
        @FaultAction(className = UsuarioNoExisteExcep_Exception.class, value = "http://publicador/Publicador/eliminarSeguimiento/Fault/UsuarioNoExisteExcep")
    })
    public void eliminarSeguimiento(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1)
        throws UsuarioNoExisteExcep_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @throws UsuarioNoExisteExcep_Exception
     */
    @WebMethod
    @Action(input = "http://publicador/Publicador/generarSeguimientoRequest", output = "http://publicador/Publicador/generarSeguimientoResponse", fault = {
        @FaultAction(className = UsuarioNoExisteExcep_Exception.class, value = "http://publicador/Publicador/generarSeguimiento/Fault/UsuarioNoExisteExcep")
    })
    public void generarSeguimiento(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1)
        throws UsuarioNoExisteExcep_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     * @throws NoPudoInscribirseExcep_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/inscribirEstudianteACurso1Request", output = "http://publicador/Publicador/inscribirEstudianteACurso1Response", fault = {
        @FaultAction(className = NoPudoInscribirseExcep_Exception.class, value = "http://publicador/Publicador/inscribirEstudianteACurso1/Fault/NoPudoInscribirseExcep")
    })
    public boolean inscribirEstudianteACurso1(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws NoPudoInscribirseExcep_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/estaCerradaLaEdicionRequest", output = "http://publicador/Publicador/estaCerradaLaEdicionResponse")
    public boolean estaCerradaLaEdicion(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @Action(input = "http://publicador/Publicador/seleccionarEstudianteRequest", output = "http://publicador/Publicador/seleccionarEstudianteResponse")
    public void seleccionarEstudiante(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns publicador.DtUsuario
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/seleccionarUsuarioRequest", output = "http://publicador/Publicador/seleccionarUsuarioResponse")
    public DtUsuario seleccionarUsuario(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     * @throws NoPudoInscribirseExcep_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/inscribirEstudianteACurso2Request", output = "http://publicador/Publicador/inscribirEstudianteACurso2Response", fault = {
        @FaultAction(className = NoPudoInscribirseExcep_Exception.class, value = "http://publicador/Publicador/inscribirEstudianteACurso2/Fault/NoPudoInscribirseExcep")
    })
    public boolean inscribirEstudianteACurso2(
        @WebParam(name = "arg0", partName = "arg0")
        XMLGregorianCalendar arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1)
        throws NoPudoInscribirseExcep_Exception
    ;

    /**
     * 
     * @return
     *     returns publicador.SetString
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/listarEstudiantesRequest", output = "http://publicador/Publicador/listarEstudiantesResponse")
    public SetString listarEstudiantes();

    /**
     * 
     * @param arg0
     * @return
     *     returns publicador.SetDtInfo
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/listarInscripcionesACursoRequest", output = "http://publicador/Publicador/listarInscripcionesACursoResponse")
    public SetDtInfo listarInscripcionesACurso(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws UsuarioNoExisteExcep_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/verVideoDeInscripcionRequest", output = "http://publicador/Publicador/verVideoDeInscripcionResponse", fault = {
        @FaultAction(className = UsuarioNoExisteExcep_Exception.class, value = "http://publicador/Publicador/verVideoDeInscripcion/Fault/UsuarioNoExisteExcep")
    })
    public String verVideoDeInscripcion(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1)
        throws UsuarioNoExisteExcep_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns publicador.SetString
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/inscriptosAProgramaRequest", output = "http://publicador/Publicador/inscriptosAProgramaResponse")
    public SetString inscriptosAPrograma(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns publicador.SetString
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/seleccionarCategoriaRequest", output = "http://publicador/Publicador/seleccionarCategoriaResponse")
    public SetString seleccionarCategoria(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns publicador.ListDtInfo
     * @throws EdicionNoExisteExcep_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/ordenarSegunRankingRequest", output = "http://publicador/Publicador/ordenarSegunRankingResponse", fault = {
        @FaultAction(className = EdicionNoExisteExcep_Exception.class, value = "http://publicador/Publicador/ordenarSegunRanking/Fault/EdicionNoExisteExcep")
    })
    public ListDtInfo ordenarSegunRanking(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws EdicionNoExisteExcep_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns publicador.SetDtInfo
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/listarInscripcionesAEdicionRequest", output = "http://publicador/Publicador/listarInscripcionesAEdicionResponse")
    public SetDtInfo listarInscripcionesAEdicion(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns publicador.SetDtComentario
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/verComentariosRequest", output = "http://publicador/Publicador/verComentariosResponse")
    public SetDtComentario verComentarios(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns publicador.Val
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/puedeValorarRequest", output = "http://publicador/Publicador/puedeValorarResponse")
    public Val puedeValorar(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @throws NoSePudoResponderExcep_Exception
     * @throws EdicionNoExisteExcep_Exception
     */
    @WebMethod
    @Action(input = "http://publicador/Publicador/comentar2Request", output = "http://publicador/Publicador/comentar2Response", fault = {
        @FaultAction(className = NoSePudoResponderExcep_Exception.class, value = "http://publicador/Publicador/comentar2/Fault/NoSePudoResponderExcep"),
        @FaultAction(className = EdicionNoExisteExcep_Exception.class, value = "http://publicador/Publicador/comentar2/Fault/EdicionNoExisteExcep")
    })
    public void comentar2(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        int arg3)
        throws EdicionNoExisteExcep_Exception, NoSePudoResponderExcep_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns double
     * @throws EvaluacionIncorrectaExcep_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/verValoracion1Request", output = "http://publicador/Publicador/verValoracion1Response", fault = {
        @FaultAction(className = EvaluacionIncorrectaExcep_Exception.class, value = "http://publicador/Publicador/verValoracion1/Fault/EvaluacionIncorrectaExcep")
    })
    public double verValoracion1(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws EvaluacionIncorrectaExcep_Exception
    ;

    /**
     * 
     * @return
     *     returns publicador.SetString
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/listarUsuariosRequest", output = "http://publicador/Publicador/listarUsuariosResponse")
    public SetString listarUsuarios();

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns double
     * @throws EvaluacionIncorrectaExcep_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/verValoracion2Request", output = "http://publicador/Publicador/verValoracion2Response", fault = {
        @FaultAction(className = EvaluacionIncorrectaExcep_Exception.class, value = "http://publicador/Publicador/verValoracion2/Fault/EvaluacionIncorrectaExcep")
    })
    public double verValoracion2(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1)
        throws EvaluacionIncorrectaExcep_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/fechaDecenteRequest", output = "http://publicador/Publicador/fechaDecenteResponse")
    public String fechaDecente(
        @WebParam(name = "arg0", partName = "arg0")
        XMLGregorianCalendar arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @Action(input = "http://publicador/Publicador/cerrarEdicionRequest", output = "http://publicador/Publicador/cerrarEdicionResponse")
    public void cerrarEdicion(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns publicador.DtUsuario
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/verDatosUsuarioRequest", output = "http://publicador/Publicador/verDatosUsuarioResponse")
    public DtUsuario verDatosUsuario(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @Action(input = "http://publicador/Publicador/editarUsuario2Request", output = "http://publicador/Publicador/editarUsuario2Response")
    public void editarUsuario2(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        XMLGregorianCalendar arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg4
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @Action(input = "http://publicador/Publicador/editarUsuario3Request", output = "http://publicador/Publicador/editarUsuario3Response")
    public void editarUsuario3(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        XMLGregorianCalendar arg2,
        @WebParam(name = "arg3", partName = "arg3")
        String arg3,
        @WebParam(name = "arg4", partName = "arg4")
        String arg4);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/dameNombreCursoRequest", output = "http://publicador/Publicador/dameNombreCursoResponse")
    public String dameNombreCurso(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws LoginIncorrectoExcep_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/iniciarSesionRequest", output = "http://publicador/Publicador/iniciarSesionResponse", fault = {
        @FaultAction(className = LoginIncorrectoExcep_Exception.class, value = "http://publicador/Publicador/iniciarSesion/Fault/LoginIncorrectoExcep")
    })
    public String iniciarSesion(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1)
        throws LoginIncorrectoExcep_Exception
    ;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @throws EvaluacionIncorrectaExcep_Exception
     */
    @WebMethod
    @Action(input = "http://publicador/Publicador/valorarRequest", output = "http://publicador/Publicador/valorarResponse", fault = {
        @FaultAction(className = EvaluacionIncorrectaExcep_Exception.class, value = "http://publicador/Publicador/valorar/Fault/EvaluacionIncorrectaExcep")
    })
    public void valorar(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        int arg2)
        throws EvaluacionIncorrectaExcep_Exception
    ;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @throws NoSePudoResponderExcep_Exception
     * @throws EdicionNoExisteExcep_Exception
     */
    @WebMethod
    @Action(input = "http://publicador/Publicador/comentar1Request", output = "http://publicador/Publicador/comentar1Response", fault = {
        @FaultAction(className = NoSePudoResponderExcep_Exception.class, value = "http://publicador/Publicador/comentar1/Fault/NoSePudoResponderExcep"),
        @FaultAction(className = EdicionNoExisteExcep_Exception.class, value = "http://publicador/Publicador/comentar1/Fault/EdicionNoExisteExcep")
    })
    public void comentar1(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2)
        throws EdicionNoExisteExcep_Exception, NoSePudoResponderExcep_Exception
    ;

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg5
     * @param arg4
     * @param arg1
     * @param arg0
     * @param arg7
     * @param arg6
     * @param arg9
     * @param arg8
     * @return
     *     returns publicador.TipoError
     * @throws Exception_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/registrarUserRequest", output = "http://publicador/Publicador/registrarUserResponse", fault = {
        @FaultAction(className = Exception_Exception.class, value = "http://publicador/Publicador/registrarUser/Fault/Exception")
    })
    public TipoError registrarUser(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        String arg2,
        @WebParam(name = "arg3", partName = "arg3")
        XMLGregorianCalendar arg3,
        @WebParam(name = "arg4", partName = "arg4")
        String arg4,
        @WebParam(name = "arg5", partName = "arg5")
        TipoUsuario arg5,
        @WebParam(name = "arg6", partName = "arg6")
        String arg6,
        @WebParam(name = "arg7", partName = "arg7")
        String arg7,
        @WebParam(name = "arg8", partName = "arg8")
        String arg8,
        @WebParam(name = "arg9", partName = "arg9")
        String arg9)
        throws Exception_Exception
    ;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @Action(input = "http://publicador/Publicador/editarUsuario1Request", output = "http://publicador/Publicador/editarUsuario1Response")
    public void editarUsuario1(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1,
        @WebParam(name = "arg2", partName = "arg2")
        XMLGregorianCalendar arg2);

    /**
     * 
     */
    @WebMethod
    @Action(input = "http://publicador/Publicador/salirUsuarioRequest", output = "http://publicador/Publicador/salirUsuarioResponse")
    public void salirUsuario();

    /**
     * 
     * @return
     *     returns publicador.SetString
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/listarDocentesRequest", output = "http://publicador/Publicador/listarDocentesResponse")
    public SetString listarDocentes();

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://publicador/Publicador/estaAceptadoRequest", output = "http://publicador/Publicador/estaAceptadoResponse")
    public boolean estaAceptado(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @throws NoPudoDesinscribirseExcep_Exception
     */
    @WebMethod
    @Action(input = "http://publicador/Publicador/desistirRequest", output = "http://publicador/Publicador/desistirResponse", fault = {
        @FaultAction(className = NoPudoDesinscribirseExcep_Exception.class, value = "http://publicador/Publicador/desistir/Fault/NoPudoDesinscribirseExcep")
    })
    public void desistir(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0,
        @WebParam(name = "arg1", partName = "arg1")
        String arg1)
        throws NoPudoDesinscribirseExcep_Exception
    ;

}
